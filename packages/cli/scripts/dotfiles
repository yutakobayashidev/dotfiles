#!/bin/sh

set -e

YOR_GITHUB_USERNAME=yutakobayashidev
GIT_CLONE_PATH=~/projects/github.com/"$YOR_GITHUB_USERNAME"
STOW_PACKAGES_PATH="$GIT_CLONE_PATH"/dotfiles/packages

for i in "$@"; do
    case "$i" in
       -s|--skip-apps)
            skip_apps=1
            shift ;;
        *) ;;
    esac
done

log() {
    message=$1
    echo ðŸ“Œ "$message"
}

is_file() {
    path="$1"
    [ -f "$path" ]
}

is_dir() {
    path="$1"
    [ -d "$path" ]
}

ensure_dir() {
    path="$1"
    if ! is_dir "$path"; then
        mkdir -p "$path"
    fi
}

arch_name="$(uname -m)"
uname=$(uname -a)

if [ "${arch_name}" = "x86_64" ]; then
    if ! is_file /usr/local/bin/brew; then
        log 'Setup Homebrew'
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
    fi
elif [ "${arch_name}" = "arm64" ]; then
    if ! is_file /opt/homebrew/bin/brew; then
        log 'Setup Homebrew'
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        eval "$(/opt/homebrew/bin/brew shellenv)"

        log 'Install Rosetta 2'
        sudo softwareupdate --install-rosetta
    fi
fi

ensure_dir "$GIT_CLONE_PATH"

if ! is_dir "$GIT_CLONE_PATH"/dotfiles; then
    log 'Clone dotfiles'
    cd "$GIT_CLONE_PATH"
    git clone https://github.com/yutakobayashidev/dotfiles.git
fi

if [ ! "$skip_apps" ]; then
log 'Install Apps and CLIs'
brew bundle -v --file "$GIT_CLONE_PATH"/dotfiles/Brewfile
fi

log 'Link dotfiles'
ensure_dir ~/.config/yarn/global
ensure_dir ~/.config/gh

stow -vd "$STOW_PACKAGES_PATH" -t ~ $(ls $STOW_PACKAGES_PATH)

# JQuake

if [ "${arch_name}" = "arm64" ]; then
    sudo xattr -r -d com.apple.quarantine /Applications/JQuake.app
fi

# macOS settings

if [ "$(uname)" = "Darwin" ]; then
    ensure_dir ~/Pictures/screenshots/
    ~/scripts/macos-defaults
else
  echo "ðŸ“Œ $(uname) does not support macos-defaults, so skip it..."
fi

# asdf

for plugin in $(awk '{print $1}' ~/.tool-versions); do
    if ! is_dir ~/.asdf/plugins/"$plugin"; then
        asdf plugin add "$plugin"
    fi
done

is_runtime_versions_changed () {
    plugin="$1"
    specified=$(grep "$plugin" ~/.tool-versions | awk '{$1=""; print $0}')
    installed=$(asdf list "$plugin" 2>&1)

    is_changed=
    for version in $specified; do
        match=$(echo "$installed" | grep "$version")
        [ -z "$match" ] && is_changed=1
    done

    [ "$is_changed" ]
}

for plugin in $(asdf plugin list); do
    if is_runtime_versions_changed "$plugin"; then
        log "Install runtime: $plugin"
        asdf install "$plugin"
    fi
done

limelight_path=/usr/local/bin/limelight
if ! is_file "$limelight_path"; then
    git clone https://github.com/koekeishiya/limelight
    cd limelight
    make
    mv ./bin/limelight /usr/local/bin/limelight
    cd ../
    rm -rf limelight
fi

echo ðŸ“¦ yarn global
if ! is_dir ~/.config/yarn/global/node_modules; then
    log 'Setup Yarn global'
    yarn global add
fi
notion-enhancer apply

gem install clocale colorls 1>/dev/null


# Done
killall cfprefsd
killall Dock

log 'All settings are complete!'
neofetch